<div class="flex flex-col items-center justify-center flex-grow min-h-screen bg-white">
    <!-- Logo -->
    <a href="/"><i class="fa-brands fa-threads fa-3x"></i></a>
    <div class="text-center w-full max-w-[386px] sm-custom:max-w-[418px] p-6 gap-0 mb-2">
        <!-- Heading -->
        <h1 class="mb-4 text-xl font-bold">Sign up</h1>
        <!-- Form -->
        <form id="signupForm" class="flex flex-col gap-2" method="POST" action="/signup" onsubmit="return process(event)">
            <!-- Email input -->
            <div>
                <label for="email" class="sr-only">Email</label>
                <input type="email" id="email" class="form-control bg-[#F5F5F5] w-full p-4 outline-none rounded-xl" name="email" placeholder="Email" required>
            </div>
        
            <!-- Username input -->
            <div>
                <label for="username" class="sr-only">Username</label>
                <input type="text" id="username" class="form-control bg-[#F5F5F5] w-full p-4 outline-none rounded-xl" name="username" placeholder="Username" required>
                <small id="username-error" class="hidden text-red-500">Username must be unique and follow the rules!</small>
            </div>
        
            <!-- Password Input -->
            <div>
                <label for="password" class="sr-only">Password</label>
                <input type="password" id="password" class="form-control bg-[#F5F5F5] w-full p-4 outline-none rounded-xl" name="password" placeholder="Password" required>
            </div>
        
            <!-- Submit Button -->
            <button id="signupBtn" type="submit" class="w-full p-4 font-medium text-white bg-black text-opacity-40 rounded-2xl">
                Sign up
            </button>
        </form>

        <div class="flex items-center py-5 mt-4">
            <hr class="flex-grow">
            <small class="mx-2 opacity-40 ">Already have an account?</small>
            <hr class="flex-grow">
        </div>

        <button id="loginBtn" type="button" class="w-full p-4 font-medium text-white bg-black rounded-2xl" 
        onclick="window.location.href='/login'">
            Log in
        </button>
    </div>
</div>

<script>
    const existingUsernames = ['user123', 'john_doe', 'admin']; 

    function validateUsername(username) {
        const regex = /^[a-zA-Z0-9_-]{3,20}$/;
        if (!regex.test(username)) {
            return "Username must be 3-20 characters, just contain letters, numbers, underscores, and hyphens.";
        }
        if (existingUsernames.includes(username)) {
            return "This username is already taken. Please choose another one.";
        }
        return null;
    }

    function validateSignupForm() {
        const username = document.getElementById('username').value;
        const errorMessage = validateUsername(username);
        if (errorMessage) {
            document.getElementById('username-error').textContent = errorMessage;
            document.getElementById('username-error').classList.remove('hidden');
            return false;
        } else {
            document.getElementById('username-error').classList.add('hidden');
            return true;
        }
    }

    document.querySelectorAll('.form-control').forEach(input => {
        input.addEventListener('focus', () => {
            input.classList.add('border', 'border-gray-300');
        });
        input.addEventListener('blur', () => {
            input.classList.remove('border', 'border-gray-300');
        });
    });

    document.querySelectorAll('.form-control').forEach(input => {
        input.addEventListener('input', () => {
            const allFilled = Array.from(document.querySelectorAll('.form-control')).every(input => input.value);
            if (allFilled) {
                document.getElementById('signup-button').classList.remove('text-opacity-40');
            } else {
                document.getElementById('signup-button').classList.add('text-opacity-40');
            }
        });
    });

    function process(e) {
        e.preventDefault();
        if (!validateSignupForm()) {
            return;
        }

        const formData = new FormData(document.getElementById('signupForm'));
        fetch('/signup', {
            method: 'POST',
            body: formData
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                window.location.href = '/signup2';
            } else {
                alert(data.error);
            }
        })
        .catch(error => console.error('Error:', error));
        return false;
    }
</script>